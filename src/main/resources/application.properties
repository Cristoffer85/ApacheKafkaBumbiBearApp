spring.kafka.consumer.bootstrap-server= localhost:9092
spring.kafka.consumer.group-id= JsonListener1
spring.kafka.consumer.auto-offset-reset= earliest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
# Json serializer tar automatiskt in String-värde, därför behöver inte ha med den som extra
spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-server= localhost:9092
spring.kafka.producer.key-deserializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer= org.springframework.kafka.support.serializer.JsonSerializer

# MongoDB properties, Server
spring.data.mongodb.uri=mongodb+srv://cristofferostberg85:Tomtarna1@cluster0.imetavy.mongodb.net/?retryWrites=true&w=majority
# MongoDB properties, Local
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=mydb

# MySQL properties
# spring.datasource.url=jdbc:mysql://localhost:3306/wikimedia
# spring.datasource.username=root
# spring.datasource.password=YourLocalmySQLPassword

# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# spring.jpa.hibernate.ddl-auto=update

# spring.jpa.properties.hibernate.show_sql=true
# spring.jpa.properties.hibernate.use_sql_comments=true
# spring.jpa.properties.hibernate.format_sql=true